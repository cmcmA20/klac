* –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–≥—Ä–∞–º–º

–í —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ —Ñ–∞–π–ª–∞ –∏–¥—É—Ç –ø—Ä–∞–≥–º—ã –¥–ª—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä–∞, –Ω–∞ –Ω–∏—Ö –ø–æ–∫–∞ –º–æ–∂–Ω–æ –Ω–µ –æ–±—Ä–∞—â–∞—Ç—å –≤–Ω–∏–º–∞–Ω–∏—è
#+begin_src agda2

{-# OPTIONS --safe #-}

#+end_src

–§–∞–π–ª—ã —Å–æ–¥–µ—Ä–∂–∞—Ç –º–æ–¥—É–ª–∏, –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Å —Ç–µ–º –∂–µ –∏–º–µ–Ω–µ–º, —á—Ç–æ —É —Ñ–∞–π–ª–∞
#+begin_src agda2

module Day1 where

#+end_src

–ò–º–ø–æ—Ä—Ç—ã –≤—ã–≥–ª—è–¥—è—Ç –≤–æ—Ç —Ç–∞–∫
#+begin_src agda2



#+end_src

–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Ç–∞–∫–∏–µ –∂–µ, –∫–∞–∫ –≤ Haskell 
#+begin_src agda2
-- –û–¥–Ω–æ—Å—Ç—Ä–æ—á–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
{- –ú–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–π
   –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
-}

#+end_src

* –ö–∞–∫ –æ–±—ä—è–≤–ª—è—Ç—å —Ç–∏–ø—ã –∏ —Ñ—É–Ω–∫—Ü–∏–∏
data –ò–ú–Ø_–¢–ò–ü–ê : Type‚ÇÄ where
  –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä1 : ... ‚Üí –ò–ú–Ø_–¢–ò–ü–ê
  –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä2 : ... ‚Üí –ò–ú–Ø_–¢–ò–ü–ê
  ...
–®—Ç—É–∫–∞ —Å–ø—Ä–∞–≤–∞ –æ—Ç –∏–º–µ–Ω–∏ —Ç–∏–ø–∞ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è *–≤—Å–µ–ª–µ–Ω–Ω–æ–π* (universe), –Ω–∞ –ø–µ—Ä–≤–æ–µ –≤—Ä–µ–º—è –Ω–∞–º —Ö–≤–∞—Ç–∏—Ç —Å–∞–º–æ–π –º–∞–ª–æ–π –≤—Å–µ–ª–µ–Ω–Ω–æ–π ~Type‚ÇÄ~
–ú–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å ùì§‚Çô (—á—Ç–æ–±—ã –Ω–∞–ø–µ—á–∞—Ç–∞—Ç—å —Ç–∞–∫—É—é —à—Ç—É–∫—É, –≤–≤–æ–¥–∏—Ç–µ \MCU\_n) –≤–º–µ—Å—Ç–æ Type‚Çô

–ù–∞–ø—Ä–∏–º–µ—Ä, –æ–ø—Ä–µ–¥–µ–ª–∏–º –±—É–ª–µ–≤ —Ç–∏–ø:
#+begin_src agda2

-- Type\_0
-- \bB
-- data ùîπ : Type‚ÇÄ where
--   false true : ùîπ

-- open import Data.Bool
--   using (true; false; if_then_else_)
--   renaming (Bool to ùîπ; _‚àß_ to _&&_; _‚à®_ to _||_)
--   public

#+end_src
*–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã* —ç—Ç–æ —Å–ø–æ—Å–æ–±—ã —Å–æ–∑–¥–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ç–∏–ø–∞.
–£ ~ùîπ~ –¥–≤–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞, –æ–±–∞ –Ω–µ —Ç—Ä–µ–±—É—é—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤. –ó–¥–µ—Å—å –º—ã –ø–æ—Å—Ç–∞–Ω–æ–≤–ª—è–µ–º, —á—Ç–æ –µ—Å—Ç—å —Ç–∏–ø ~ùîπ~, –µ–≥–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –¥–≤—É–º—è —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏: ~false~ –∏ ~true~

–ú–Ω–µ–º–æ–Ω–∏–∫–∞ –ø—Ä–æ—Å—Ç–∞—è, –ø—Ä–µ—Ñ–∏–∫—Å \b –∑–Ω–∞—á–∏—Ç blackboard, —ç—Ç–æ —á—Ç–æ–±—ã –Ω–∞–ø–µ—á–∞—Ç–∞—Ç—å —Å–∏–º–≤–æ–ª —Ç–∞–∫, –∫–∞–∫ –æ–Ω –≤—ã–≥–ª—è–¥–µ–ª –±—ã –Ω–∞ –¥–æ—Å–∫–µ.
–í —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ –∏ —à–∫–æ–ª–µ –º–æ–∂–Ω–æ –±—ã–ª–æ –≤–∏–¥–µ—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –¥–ª—è –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª ‚Ñù, —Ä–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö ‚Ñö –∏—Ç–¥

–î–∞–≤–∞–π—Ç–µ –æ–ø—Ä–µ–¥–µ–ª–∏–º –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ —á–∏—Å–ª–∞:
#+begin_src agda2

-- \bN
-- \->
-- data ‚Ñï : Type‚ÇÄ where
--   zero :     ‚Ñï
--   suc  : ‚Ñï ‚Üí ‚Ñï
-- {-# BUILTIN NATURAL ‚Ñï #-} -- —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–∏—Ç–µ—Ä–∞–ª—ã 0, 1 etc

open import Data.Nat using (‚Ñï; zero; suc; _+_; _*_)

#+end_src
–£ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª —Ç–æ–∂–µ –¥–≤–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞, –Ω–æ –∏—Ö —Å–∏–≥–Ω–∞—Ç—É—Ä—ã —á—É—Ç—å —Å–ª–æ–∂–Ω–µ–µ.
–£ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ –Ω–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤, –º–æ–∂–Ω–æ —Å—á–∏—Ç–∞—Ç—å, —á—Ç–æ –º—ã –≤–≤–µ–ª–∏ –Ω–æ–≤–æ–µ –ø—Ä–∞–≤–∏–ª–æ "–Ω–æ–ª—å —ç—Ç–æ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ".
–ï—Å–ª–∏ —É –∫–æ–≥–æ –±—ã–ª –∫—É—Ä—Å –ø–æ –º–∞—Ç–ª–æ–≥–∏–∫–µ, —Ç–∞–º —ç—Ç–æ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç –≤ —Ç–∞–∫–æ–π –Ω–æ—Ç–∞—Ü–∏–∏ (–Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —ç—Ç–æ *[[https://en.wikipedia.org/wiki/Sequent_calculus][–∏—Å—á–∏—Å–ª–µ–Ω–∏–µ–º —Å–µ–∫–≤–µ–Ω—Ü–∏–π]]* –≤ —Å—Ç–∏–ª–µ –ì–µ–Ω—Ü–µ–Ω–∞)

#+begin_src seq


‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
   ‚Ñï : Type‚ÇÄ


‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
  zero : ‚Ñï
  
#+end_src

–í—Ç–æ—Ä–æ–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä ~suc~ (successor, —Å–ª–µ–¥—É—é—â–∏–π) –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç —Ç–∏–ø–∞ ~‚Ñï~. –≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –µ—Å–ª–∏ —É –Ω–∞—Å —É–∂–µ –±—ã–ª–æ –∫–∞–∫–æ–µ-—Ç–æ
–Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ ~n~, —Ç–æ ~suc n~ —Ç–æ–∂–µ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.

#+begin_src seq

   n : ‚Ñï
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
  suc n : ‚Ñï
  
#+end_src

–ò–ú–Ø_–§–£–ù–ö–¶–ò–ò : –°–ò–ì–ù–ê–¢–£–†–ê
–ò–ú–Ø_–§–£–ù–ö–¶–ò–ò –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä1 –∞—Ä–≥—É–º–µ–Ω—Ç2 ... = –¢–ï–õ–û_–§–£–ù–ö–¶–ò–ò1
–ò–ú–Ø_–§–£–ù–ö–¶–ò–ò –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä2 –∞—Ä–≥—É–º–µ–Ω—Ç2 ... = –¢–ï–õ–û_–§–£–ù–ö–¶–ò–ò2
...

–ò—Ç–∞–∫, –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã –ø–æ–∑–≤–æ–ª—è—é—Ç –Ω–∞–º —Å–æ–∑–¥–∞–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç—ã —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤, –Ω–æ –Ω–∞–º –µ—â—ë –Ω—É–∂–Ω–æ —Å –Ω–∏–º–∏ —á—Ç–æ-—Ç–æ –ø–æ–ª–µ–∑–Ω–æ–µ –¥–µ–ª–∞—Ç—å.
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç—ã –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∏–º —Å–ø–æ—Å–æ–±–æ–º ‚Äî —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–π. –§—É–Ω–∫—Ü–∏–∏ –∑–∞–¥–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ pattern matching.
–î–∞–≤–∞–π—Ç–µ –æ–ø—Ä–µ–¥–µ–ª–∏–º –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–µ –∏ –ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏:
#+begin_src agda2

-- _+_ : ‚Ñï ‚Üí ‚Ñï ‚Üí ‚Ñï
-- zero  + y = y
-- suc x + y = suc (x + y)
-- infixr 5 _+_ -- –∏–Ω—Ñ–∏–∫—Å–Ω—ã–π –ø—Ä–∞–≤–æ–∞—Å—Å–æ—Ü–∏–∞—Ç–∏–≤–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º 5

#+end_src

* Mixfix operators
–í –∞–≥–¥–µ –Ω–∏–∂–Ω–µ–µ –ø–æ–¥—á—ë—Ä–∫–∏–≤–∞–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —á–∞—Å—Ç—å—é –∏–º–µ–Ω–∏, –æ–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –≤ —ç—Ç–æ–π –ø–æ–∑–∏—Ü–∏–∏ —Ñ—É–Ω–∫—Ü–∏—è –∂–µ–ª–∞–µ—Ç –≤–∏–¥–µ—Ç—å —Å–≤–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç.
–§—É–Ω–∫—Ü–∏—è ~_+_~ —Ç—Ä–µ–±—É–µ—Ç –¥–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞, –æ–¥–∏–Ω —Å–ª–µ–≤–∞ –æ—Ç –∑–Ω–∞–∫–∞ '+', –¥—Ä—É–≥–æ–π —Å–ø—Ä–∞–≤–∞. –¢–∞–∫–∞—è –≥–∏–±–∫–æ—Å—Ç—å –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–æ—Ç–∞—Ü–∏—é, –º–∞–ª–æ –æ—Ç–ª–∏—á–∞—é—â—É—é—Å—è
–æ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–π –≤ —Å—Ç–∞—Ç—å—è—Ö –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ –∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–º –Ω–∞—É–∫–∞–º.

* –¢–æ—á–∫–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
–ö–æ–≥–¥–∞ —Å–æ–∑–¥–∞—ë—Ç–µ –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å –µ—ë –∏–º—è –∏ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –∑–Ω–∞–∫ '?' –ø–æ—Å–ª–µ —Ä–∞–≤–µ–Ω—Å—Ç–≤–∞. –¢–∞–∫ —Å–æ–∑–¥–∞—é—Ç—Å—è *—Ç–æ—á–∫–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è*, –æ–Ω–∏ –∂–µ *–¥—ã—Ä–∫–∏*.
–≠—Ç–æ—Ç –º–µ—Ö–∞–Ω–∏–∑–º –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–∏—Å–∞—Ç—å –∫–æ–¥ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ, –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –µ–≥–æ —É—Ç–æ—á–Ω—è—è. –í –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ —Å–ª—É—á–∞–µ–≤ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–µ—Ç—Ä–∏–≤–∏–∞–ª—å–Ω—ã–π –∫–æ–¥ –Ω–∞ –∞–≥–¥–µ —Å –ø–µ—Ä–≤–æ–π –ø–æ–ø—ã—Ç–∫–∏ –±–µ–∑ –¥—ã—Ä–æ–∫
–ø—Ä–æ—Å—Ç–æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.

* –ö–∞–∫–∏–µ –±—ã–≤–∞—é—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è

–°–∞–º–æ–µ —á–∞—Å—Ç–æ–µ, —á—Ç–æ –Ω–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è:
~C-c C-l~ –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Ñ–∞–π–ª
~C-c C-,~ –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ —Ü–µ–ª—å
~C-c C-c~ —Ä–∞–∑–æ–±—Ä–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –Ω–∞ —Å–ª—É—á–∞–∏ (case analysis)
~C-c C-r~ —É—Ç–æ—á–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç (–ø–æ–¥–±–∏—Ä–∞–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä, –µ—Å–ª–∏ —ç—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º)

–°–∞–º–∞—è –ø–æ–ª–µ–∑–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ :-)
~C-c C-a~ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ —Ä–µ—à–µ–Ω–∏—è

–í–Ω—É—Ç—Ä–∏ –¥—ã—Ä–∫–∏ –º–æ–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –æ—Ç–≤–µ—Ç —Ä—É–∫–∞–º–∏, –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –Ω–∞–∂–∞—Ç—å ~C-c C-SPC~, –∞–≥–¥–∞ –µ–≥–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç

#+begin_src agda2

-- _*_ : ‚Ñï ‚Üí ‚Ñï ‚Üí ‚Ñï
-- zero  * _ = zero
-- suc x * y = y + x * y
-- infixr 6 _*_

-- not : ùîπ ‚Üí ùîπ
-- not false = true
-- not true  = false

-- _&&_ : (x : ùîπ) ‚Üí (y : ùîπ) ‚Üí ùîπ
-- false && _ = false
-- true  && y = y
-- infixr 5 _&&_

-- _||_ : (x : ùîπ) (y : ùîπ) ‚Üí ùîπ
-- false || y = y
-- true  || _ = true
-- infixr 4 _||_

-- if_then_else_ : {A : Type ‚Ñì} ‚Üí (condition : ùîπ) ‚Üí A ‚Üí A ‚Üí A
-- if false then _ else y = y
-- if true  then x else _ = x

#+end_src

–¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –º–æ–≥—É—Ç –∏–º–µ—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä –º–æ–∂–Ω–æ –æ–±—ä—è–≤–∏—Ç—å –ø–æ–ª–∏–º–æ—Ä—Ñ–Ω—ã–µ —Å–ø–∏—Å–∫–∏.
#+begin_src agda2

-- data List (A : Type ‚Ñì) : Type ‚Ñì where
--   []  :              List A
--   _‚à∑_ : A ‚Üí List A ‚Üí List A
-- infixr 4 _‚à∑_

open import Data.List using (List; []; _‚à∑_)

#+end_src

–°–ø–∏—Å–∫–∏ –≤ –≤–∏–¥–µ —Å–µ–∫–≤–µ–Ω—Ü–∏–π:
#+begin_src seq

     A : Type‚ÇÄ
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
   List A : Type‚ÇÄ


   A : Type‚ÇÄ
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
   [] : List A


  A : Type‚ÇÄ     x : A     xs : List A
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
           x ‚à∑ xs : List A

#+end_src

* –ù–µ—è–≤–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
–ù–µ—è–≤–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ —Ñ–∏–≥—É—Ä–Ω—ã—Ö —Å–∫–æ–±–∫–∞—Ö. –ü—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏ —Å –Ω–µ—è–≤–Ω—ã–º–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏, –æ–Ω–∏ –±—É–¥—É—Ç –≤—ã–≤–µ–¥–µ–Ω—ã –∞–≥–¥–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏,
–µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ. –≠—Ç–∞ –∂–µ –∞–≤—Ç–æ–º–∞—Ç–∏–∫–∞ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è, –µ—Å–ª–∏ –≤–º–µ—Å—Ç–æ —Ç–µ—Ä–º–∞ –Ω–∞–ø–∏—Å–∞—Ç—å —Å–∏–º–≤–æ–ª –Ω–∏–∂–Ω–µ–≥–æ –ø–æ–¥—á—ë—Ä–∫–∏–≤–∞–Ω–∏—è. –£–¥–æ–±–Ω–æ, –∫–æ–≥–¥–∞
–Ω–µ —Ö–æ—á–µ—Ç—Å—è –ø–∏—Å–∞—Ç—å —Ä—É–∫–∞–º–∏ –æ—á–µ–≤–∏–¥–Ω—ã–π (–≤ —Ñ–æ—Ä–º–∞–ª—å–Ω–æ–º —Å–º—ã—Å–ª–µ) –æ—Ç–≤–µ—Ç.

#+begin_src agda2
open import Foundations.Prim.Type

private variable
  ‚Ñì : Level

-- length : {A : Type ‚Ñì} ‚Üí List A ‚Üí ‚Ñï
-- length []       = 0
-- length (_ ‚à∑ xs) = suc (length xs)

-- _++_ : {A : Type ‚Ñì} ‚Üí (xs ys : List A) ‚Üí List A
-- []       ++ ys = ys
-- (x ‚à∑ xs) ++ ys = x ‚à∑ xs ++ ys
-- infixr 7 _++_

-- head‚Çó : {A : Type‚ÇÄ} ‚Üí List A ‚Üí A
-- head‚Çó [] = {!!} -- —Ç–∞–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞
-- head‚Çó (x ‚à∑ _) = x

tail‚Çó : {A : Type ‚Ñì} ‚Üí List A ‚Üí List A
tail‚Çó []       = []
tail‚Çó (_ ‚à∑ xs) = xs

-- lookup‚Çó : {A : Type‚ÇÄ} ‚Üí (index : ‚Ñï) ‚Üí List A ‚Üí A
-- lookup‚Çó index xs = {!!} -- —Ç–∞–∫–∞—è —Ç–æ–∂–µ

#+end_src

* –ó–∞–≤–∏—Å–∏–º—ã–µ —Ç–∏–ø—ã
–°–∞–º—ã–π —Ü–∏–º–µ—Å, –∫–∏–ª–ª–µ—Ä —Ñ–∏—á–∞ –∞–≥–¥—ã –∏ –ø–æ–¥–æ–±–Ω—ã—Ö —è–∑—ã–∫–æ–≤.

–û—Ç—Å—Ç—É–ø–ª–µ–Ω–∏–µ –ø—Ä–æ –ª—è–º–±–¥–∞-–∫—É–±:
  - —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–∑–≤–æ–ª—è—é—Ç –∑–Ω–∞—á–µ–Ω–∏—è–º –∑–∞–≤–∏—Å–µ—Ç—å –æ—Ç –¥—Ä—É–≥–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π
  - –ø–∞—Ä–∞–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–π –ø–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ç–∏–ø–∞–º –∑–∞–≤–∏—Å–µ—Ç—å –æ—Ç –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ (–∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ —Å–æ —Å–ø–∏—Å–∫–æ–º)
  - –∑–Ω–∞—á–µ–Ω–∏—è –º–æ–≥—É—Ç –∑–∞–≤–∏—Å–µ—Ç—å –æ—Ç —Ç–∏–ø–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å –ø–æ–º–æ—â—å—é —Ç–∞–π–ø–∫–ª–∞—Å—Å–æ–≤ –≤ —Ö–∞—Å–∫–µ–ª–ª–µ –º–æ–∂–Ω–æ —Ç–∞–∫–æ–µ —Å–¥–µ–ª–∞—Ç—å)
  - –≤ –∞–≥–¥–µ —Ç–∏–ø—ã –º–æ–≥—É—Ç –∑–∞–≤–∏—Å–µ—Ç—å –æ—Ç –∑–Ω–∞—á–µ–Ω–∏–π

–í—Å–µ–º –Ω–∞–¥–æ–µ–≤—à–∏–π –ø—Ä–∏–º–µ—Ä —Å–æ —Å–ø–∏—Å–∫–∞–º–∏, –ø—Ä–æ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–ª–∏–Ω–æ–π, —Ç.–µ. –≤–µ–∫—Ç–æ—Ä–∞–º–∏.
–¢–∞–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è *–∑–∞–≤–∏—Å–∏–º—ã–º —Ç–∏–ø–æ–º* –∏–ª–∏ *—Å–µ–º–µ–π—Å—Ç–≤–æ–º —Ç–∏–ø–æ–≤*, —Ç–∫ –æ–Ω–æ –∑–∞–¥–∞—ë—Ç –Ω–µ –æ–¥–∏–Ω –Ω–æ–≤—ã–π —Ç–∏–ø, –∞ —Å—Ä–∞–∑—É —Ü–µ–ª—ã–π –Ω–∞–±–æ—Ä, –ø–æ –æ–¥–Ω–æ–º—É
–¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ ‚Ñï: Vec A 0, Vec A 1, Vec A 2 ...
#+begin_src agda2

-- data Vec (A : Type ‚Ñì) : ‚Ñï ‚Üí Type ‚Ñì where
--   []  :                         Vec A 0
--   _‚à∑_ : {n : ‚Ñï} ‚Üí A ‚Üí Vec A n ‚Üí Vec A (suc n)

open import Data.Vec
  using (Vec; []; _‚à∑_)

head·µ• : {A : Type ‚Ñì} {n : ‚Ñï} ‚Üí Vec A (suc n) ‚Üí A
head·µ• (x ‚à∑ _) = x

tail·µ• : {A : Type ‚Ñì} {n : ‚Ñï} ‚Üí Vec A (suc n) ‚Üí Vec A n
tail·µ• (_ ‚à∑ xs) = xs

#+end_src

–ö–∞–∫ –≤—ã–≥–ª—è–¥—è—Ç –≤–µ–∫—Ç–æ—Ä—ã –∏ –∫–æ–Ω–µ—á–Ω—ã–µ —Ç–∏–ø—ã –Ω–∞ —Å–µ–∫–≤–µ–Ω—Ç–∞—Ö:
#+begin_src seq

  A : Type‚ÇÄ    n : ‚Ñï
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
   Vec A n : Type‚ÇÄ


     A : Type‚ÇÄ
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    [] : Vec A 0


  A : Type‚ÇÄ      n : ‚Ñï      v : A      vs : Vec A n
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
                  v ‚à∑ vs : Vec A (suc n)


        n : ‚Ñï
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    fzero : Fin (suc n)


  n : ‚Ñï      k : Fin n
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    fsuc k : Fin (suc n)

#+end_src

–ù–∞—É—á–∏–º—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –¥–æ—Å—Ç–∞–≤–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ –∏–Ω–¥–µ–∫—Å—É –∏–∑ –≤–µ–∫—Ç–æ—Ä–æ–≤, –¥–ª—è —ç—Ç–æ–≥–æ —Å–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–¥–∏–º –Ω—É–∂–Ω—ã–π —Ç–∏–ø –¥–ª—è –∏–Ω–¥–µ–∫—Å–æ–≤:
#+begin_src agda2

-- data Fin : ‚Ñï ‚Üí Type‚ÇÄ where
--   fzero : {n : ‚Ñï}         ‚Üí Fin (suc n)
--   fsuc  : {n : ‚Ñï} ‚Üí Fin n ‚Üí Fin (suc n)

open import Data.Fin.Base using (Fin; fzero; fsuc)
  

finEx‚ÇÅ : Fin 2
finEx‚ÇÅ = fzero

finEx‚ÇÇ : Fin 2
finEx‚ÇÇ = fsuc fzero

lookup·µ• : {A : Type ‚Ñì} {n : ‚Ñï} ‚Üí (index : Fin n) ‚Üí Vec A n ‚Üí A
lookup·µ• fzero        (x ‚à∑ _)  = x
lookup·µ• (fsuc index) (_ ‚à∑ xs) = lookup·µ• index xs

#+end_src

* –ò–¥–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç—å/—Ä–∞–≤–µ–Ω—Å—Ç–≤–æ
–ü–æ–Ω—è—Ç–∏–µ –æ—á–µ–Ω—å –≥–ª—É–±–æ–∫–æ–µ, –µ—Å–ª–∏ –∫—Ç–æ —Ö–æ—á–µ—Ç –¥–µ—Ç–∞–ª—å–Ω–æ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è, –º–∏–ª–æ—Å—Ç–∏ –ø—Ä–æ—à—É –Ω–∞ [[https://ncatlab.org/nlab/show/equality][–Ω–ª–∞–±]] –∏–ª–∏ –≤ [[https://homotopytypetheory.org/book/][hott-book]].

/–ü—Ä–æ–ø–æ–∑–∏—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ/ –≤ –∞–≥–¥–µ –º–æ–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–∞–∫ —Å–µ–º–µ–π—Å—Ç–≤–æ, –∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –¥–≤—É–º—è –∫–æ–ø–∏—è–º–∏ –ª—é–±–æ–≥–æ —Ç–∏–ø–∞ ~A~.
–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π, –∫–æ—Ç–æ—Ä—ã–π –¥–ª—è –ª—é–±–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ ~x : A~ —É—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç, —á—Ç–æ ~x~ —Ä–∞–≤–µ–Ω —Å–∞–º–æ–º—É —Å–µ–±–µ.
#+begin_src agda2

open import Data.Nat.Base using (_¬∑_)
open import Foundations.Equality

-- \==
-- data _‚â°_ {‚Ñì} {A : Type ‚Ñì} : A ‚Üí A ‚Üí Type ‚Ñì where
--   refl : (x : A) ‚Üí x ‚â° x
-- infix 0 _‚â°_
-- {-# BUILTIN EQUALITY _‚â°_ #-}

_ : 6 + (7 ¬∑ 5) Ôºù‚Å± 41
_ = refl‚Å±

#+end_src

–†–∞–≤–µ–Ω—Å—Ç–≤–æ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è, –µ—Å–ª–∏ –Ω–∞ –æ–±–µ —á–∞—Å—Ç–∏ –ø–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –ª—é–±–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π.
–†–∞–≤–µ–Ω—Å—Ç–≤–æ —è–≤–ª—è–µ—Ç—Å—è –æ—Ç–Ω–æ—à–µ–Ω–∏–µ–º —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–Ω–æ—Å—Ç–∏, —Ç.–µ. –æ–Ω–æ —Ä–µ—Ñ–ª–µ–∫—Å–∏–≤–Ω–æ, —Å–∏–º–º–µ—Ç—Ä–∏—á–Ω–æ –∏ —Ç—Ä–∞–Ω–∑–∏—Ç–∏–≤–Ω–æ.
#+begin_src agda2

-- cong : {A B : Type‚ÇÄ} (f : A ‚Üí B) {x y : A} ‚Üí x ‚â° y ‚Üí f x ‚â° f y
-- cong f (refl _) = refl (f _)

-- sym : {A : Type‚ÇÄ} {x y : A} ‚Üí x ‚â° y ‚Üí y ‚â° x
-- sym (refl _) = refl _

-- trans : {A : Type‚ÇÄ} {x y z : A} ‚Üí x ‚â° y ‚Üí y ‚â° z ‚Üí x ‚â° z
-- trans p (refl _) = p

#+end_src

* –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ö–∞—Ä—Ä–∏-–ì–æ–≤–∞—Ä–¥–∞-–õ–∞–º–±–µ–∫–∞
–§–æ—Ä–º–∞–ª—å–Ω–æ —Å–≤—è–∑—å –º–µ–∂–¥—É —Ç–µ–æ—Ä–∏–µ–π —Ç–∏–ø–æ–≤, –º–∞—Ç–ª–æ–≥–∏–∫–æ–π –∏ —Ç–µ–æ—Ä–∏–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–π –±—ã–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤—ã—à–µ–Ω–∞–∑–≤–∞–Ω–Ω—ã–º–∏ —á—É–≤–∞–∫–∞–º–∏.
–ü—Ä–æ—â–µ –≤—Å–µ–≥–æ –≤–∑–≥–ª—è–Ω—É—Ç—å –Ω–∞ [[https://ncatlab.org/nlab/show/computational+trilogy][—Ç–∞–±–ª–∏—á–∫—É]].
[[./curry-howard.png]]

–¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –ø–æ—á–∏—Ç–∞—Ç—å –ø—Ä–æ [[https://ncatlab.org/nlab/show/Brouwer-Heyting-Kolmogorov+interpretation][–∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é –ë—Ä–æ—É—ç—Ä–∞-–ì–µ–π—Ç–∏–Ω–≥–∞-–ö–æ–ª–º–æ–≥–æ—Ä–æ–≤–∞]] –¥–ª—è –∏–Ω—Ç—É–∏—Ü–∏–æ–Ω–∏—Å—Ç—Å–∫–æ–π –ª–æ–≥–∏–∫–∏.

–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞ –ª–æ–∂—å, –∏—Å—Ç–∏–Ω—É, "–∏", "–∏–ª–∏", "–Ω–µ", –∏–º–ø–ª–∏–∫–∞—Ü–∏—é, –∫–≤–∞–Ω—Ç–æ—Ä—ã "–¥–ª—è –≤—Å–µ—Ö" –∏ "—Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
#+begin_src agda2

-- data ‚ä• : Type‚ÇÄ where

-- ex-falso-quodlibet : {A : Type ‚Ñì} ‚Üí ‚ä• ‚Üí A
-- ex-falso-quodlibet ()

-- open import Data.Empty
--   using (‚ä•; ‚ä•-elim)

-- record ‚ä§ : Type‚ÇÄ where
--   constructor tt

-- data ‚ä§ : Type‚ÇÄ where
--   tt : ‚ä§

open import Data.Unit
  using (‚ä§; tt)

-- _‚àß_ : {‚Ñì‚ÇÅ ‚Ñì‚ÇÇ : Level} ‚Üí Type ‚Ñì‚ÇÅ ‚Üí Type ‚Ñì‚ÇÇ ‚Üí Type _
-- A ‚àß B = A √ó B
-- infixr 6 _‚àß_

open import Data.Product
  using ()
  renaming (_√ó_ to _‚àß_)

-- data _‚à®_ {‚Ñì} (A B : Type ‚Ñì) : Type ‚Ñì where
--   inj‚ÇÅ : A ‚Üí A ‚à® B
--   inj‚ÇÇ : B ‚Üí A ‚à® B
-- infixr 5 _‚à®_

open import Data.Sum using () renaming (_‚äé_ to _‚à®_)

-- ¬¨_ : {‚Ñì : Level} ‚Üí Type ‚Ñì ‚Üí Type ‚Ñì
-- ¬¨ A = A ‚Üí ‚ä•

open import Structures.??? using (¬¨_)

-- _‚áí_ : {‚Ñì‚ÇÅ ‚Ñì‚ÇÇ : Level} ‚Üí Type ‚Ñì‚ÇÅ ‚Üí Type ‚Ñì‚ÇÇ ‚Üí Type _
-- P ‚áí Q = P ‚Üí Q
-- infixr 3 _‚áí_



-- _‚áî_ : {‚Ñì‚ÇÅ ‚Ñì‚ÇÇ : Level} ‚Üí Type ‚Ñì‚ÇÅ ‚Üí Type ‚Ñì‚ÇÇ ‚Üí Type _
-- P ‚áî Q = (P ‚áí Q) ‚àß (Q ‚áí P)



#+end_src
